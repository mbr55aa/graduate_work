@startuml
!include https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Container.puml
!include <C4/C4_Container.puml>
!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5
!define osaPuml https://raw.githubusercontent.com/Crashedmind/PlantUML-opensecurityarchitecture2-icons/master
!include FONTAWESOME/users.puml
!include <office/Servers/application_server>
!include <office/Servers/database_server>

title Assistant API (Alice Schema)

'Элемент пользователь
Person(user, "User")

'Добавляем теги для цветов контейнеров
AddElementTag("bg_red", $bgColor="#fd6159")
AddElementTag("bg_yellow", $bgColor="#fff384")
AddElementTag("bg_green", $bgColor="#79cfb8")
AddElementTag("bg_lime", $bgColor="#00ff00")
AddElementTag("bg_purple", $bgColor="#800080")
AddElementTag("font_black", $fontColor="#000000")
AddElementTag("border_black", $borderColor="#000000")

'Объявляем цвета
!$COLOR_BLACK = "#000000"
!$COLOR_REL_LINE = "#444444"
!$COLOR_REL_TEXT = "#444444"

'Меняем стиль линий
UpdateRelStyle($lineColor=$COLOR_REL_LINE, $textColor=$COLOR_REL_TEXT)

'Добавляем легенду
LAYOUT_WITH_LEGEND()

'Схема Yandex.Dialogs
System_Boundary(alice, "Alice Skill") {
    System_Boundary(dialogs, "Yandex.Dialogs"){
        Container(skill, "Yandex.Dialogs", "skill", $tags="font_black+bg_yellow+border_black")
        Container(intents, "Intents", "film, director, actor", $tags="font_black+bg_green+border_black")
        Container(entity, "Entity", "genres", $tags="font_black+bg_green+border_black")
        Container(state, "State", "film", $tags="font_black+bg_green+border_black")
    }
    Container(cloud, "Yandex.Cloud", "cloud function", $tags="font_black+bg_lime+border_black")
}

'Conntector to Async API
Container(connector, "Assistant ApI", "Flask", $tags="font_black+bg_red")

'Async API
Container(async_api, "Async API", "FastAPI", $tags="font_black+bg_red")

'Bob
Container(bob, "Bob", "offline voice assistant", $tags="font_black+bg_red")

bob .. connector

Rel(user, skill, "Request", "voice / text")
skill <.. intents : intent
skill <.. entity
skill <.. state

Rel(skill, cloud, "Request", "event, context")

Rel(connector, cloud, "Request", "json")
Rel(cloud, connector, "Response", "json")

Rel(connector, async_api, "Response", "json")
Rel(async_api, connector, "Request", "json")

'Rel(assistant, async_api, "Request", "json")
'Rel(async_api, assistant, "Response", "json")

Rel(cloud, skill, "Response", "json")
Rel(skill, user, "Response", "voice / text")

@enduml