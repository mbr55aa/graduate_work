@startuml
!include https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Container.puml
!include <C4/C4_Container.puml>
!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5
!define osaPuml https://raw.githubusercontent.com/Crashedmind/PlantUML-opensecurityarchitecture2-icons/master
!include FONTAWESOME/users.puml
!include <office/Servers/application_server>
!include <office/Servers/database_server>

title Голосовой помощник

'Добавляем теги для цветов контейнеров
AddElementTag("bg_red", $bgColor="#d54240")
AddElementTag("bg_green", $bgColor="#79cfb8")
AddElementTag("font_black", $fontColor="#000000")
AddElementTag("border_black", $borderColor="#000000")

'Добавляем теги для типов контейнеров
AddContainerTag("cloudApp", $sprite="application_server", $legendText="web app container")
AddContainerTag("localApp", $sprite="application_server", $legendText="web app container")
AddContainerTag("webApp", $sprite="application_server", $legendText="web app container")
AddContainerTag("db", $sprite="database_server", $legendText="database container")

'Объявляем цвета
!$COLOR_BLUE = "#3872fd"
!$COLOR_BLACK = "#000000"
!$COLOR_REL_LINE = "#4169E1"
!$COLOR_REL_TEXT = "#8073ac"

'Меняем стиль линий и элемента person
UpdateElementStyle("person", $bgColor=$COLOR_BLUE, $fontColor=$COLOR_BLACK, $borderColor=$COLOR_BLACK, $shadowing="true")
UpdateRelStyle($lineColor=$COLOR_REL_LINE, $textColor=$COLOR_REL_TEXT)

'Добавляем легенду
LAYOUT_WITH_LEGEND()

'Элемент пользователь
Person(user, "User")

'Система локального распознования и синтеза речи (Bob)
Container(bob, "Bob Application", "Python", $tags="font_black+bg_red+localApp")

'Навыки Алисы
Container(alice, "Alice Skill", "API", $tags="font_black+bg_red+cloudApp")

'Сам голосовой ассистент
Container(assistent_api, "Assistent API", "Python, Flask", $descr="api для работы ассистента", $tags="font_black+bg_red+webApp")

'Система movie_service
System_Boundary(movie_service, "Movie Service") {
    Container(async_api, "Async API", "Python, FastAPI", $tags="font_black+bg_green+border_black+webApp")
    ContainerDb(elastic, "DB ES", "ElasticSearch", $tags="font_black+bg_green+border_black+db")
    ContainerDb(redis, "DB Redis", "Redis", $tags="font_black+bg_green+border_black+db")
}

'assistent_api -[hidden]> movie_service
redis -[hidden]> async_api
async_api -[hidden]> elastic

Rel(user, bob, "Voice question")
Rel(user, alice, "Voice question")

Rel(bob, assistent_api, "Command", "json")
Rel(alice, assistent_api, "Command", "json")

Rel(assistent_api, async_api, "Command", "json")
Rel(async_api, assistent_api, "Answer", "json")

Rel(async_api, elastic, "Responce")
Rel(async_api, redis, "Set state")

Rel(elastic, async_api, "Answer")
Rel(redis, async_api, "Get state")

Rel_L(assistent_api, bob, "Answer", "json")
Rel_L(assistent_api, alice, "Answer", "json")

Rel_L(bob, user, "Voice Answer")
Rel_L(alice, user, "Voice answer")
@enduml